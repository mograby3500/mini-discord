version: "3.9"

services:
  db:
    image: postgres:17
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: ${SQLDB_NAME}
      POSTGRES_USER: ${SQLDB_USER}
      POSTGRES_PASSWORD: ${SQLDB_PASSWORD}
    volumes:
      - ./backend/migrations:/docker-entrypoint-initdb.d
    networks:
      - app-network

  mongodb:
    image: mongo:7
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - ./.env
    depends_on:
      - db
      - mongodb
    profiles:
      - prod
    networks:
      - app-network

  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    command: air
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
    env_file:
      - ./.env
    depends_on:
      - db
      - mongodb
    networks:
      - app-network
    profiles:
      - dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app-network
    profiles:
      - prod

  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    command: npm start
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend-dev
    networks:
      - app-network
    profiles:
      - dev

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
